{"version":3,"sources":["Sidebar.js","cog.svg","Labs.js","index.tsx"],"names":["onSave","useState","selectedElement","setSelectedElement","onDragStart","event","nodeType","dataTransfer","setData","effectAllowed","className","onClick","onMouseEnter","draggable","initialElements","id","withStreamlitConnection","props","paneMoveable","panOnScroll","reactFlowWrapper","useRef","reactFlowInstance","setReactFlowInstance","elements","setElements","clinetData","JSON","parse","args","json","onLoad","_reactFlowInstance","length","es","concat","elms","Object","keys","i","console","log","push","generateNodesFromValueChain","valuChain","valuChainItem","hasOwnProperty","call","element","childOf","source","target","type","generateEdgesFromValueChain","initialValue","label","useEffect","Streamlit","setFrameHeight","ref","onConnect","params","els","addEdge","onDrop","preventDefault","reactFlowBounds","current","getBoundingClientRect","getData","elm","position","project","x","clientX","left","y","clientY","top","newNode","sourcePosition","targetPosition","data","onDragOver","dropEffect","snapToGrid","onNodeDoubleClick","node","filter","variant","Sidebar","getElements","setComponentValue","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.603e25b2.chunk.js","sourcesContent":["import React ,{ useState } from \"react\";\r\n\r\nexport default ({ onSave }) => {\r\n  const [selectedElement, setSelectedElement] = useState(\"\"); // état local pour stocker l'élément sélectionné\r\n\r\n\r\n  const onDragStart = (event, nodeType) => {\r\n    event.dataTransfer.setData(\"application/reactflow\", nodeType);\r\n    event.dataTransfer.effectAllowed = \"move\";\r\n    event.dataTransfer.setData(\"elm\", selectedElement);\r\n    \r\n  };\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  function close() {\r\n    setIsOpen(false);\r\n  }\r\n  return (\r\n    <aside>\r\n      <div className=\"description\">\r\n        <p>Générer le code d'un modèle en déplaçant les blocks dans le canvas</p>\r\n        \r\n        <button onClick={onSave}>Save</button>\r\n      </div>\r\n      <div\r\n        onMouseEnter={() => setSelectedElement(\"DataSource\")}\r\n        className=\"dndnode input\"\r\n        onDragStart={(event) => onDragStart(event, \"input\")}\r\n        draggable\r\n      >\r\n        DataSource\r\n      </div>\r\n      <div onMouseEnter={() => setSelectedElement(\"Time Series Split\")}\r\n        className=\"dndnode\"\r\n        onDragStart={(event) => onDragStart(event, \"default\")}\r\n        draggable\r\n      >\r\n       Time Series Split\r\n      </div>\r\n\r\n      <div\r\n        onMouseEnter={() => setSelectedElement(\"Features\")}\r\n        className=\"dndnode\"\r\n        onDragStart={(event) => onDragStart(event, \"default\")}\r\n        draggable\r\n      >\r\n        Features\r\n      </div>\r\n      <div\r\n        onMouseEnter={() => setSelectedElement(\"Dummies\")}\r\n        className=\"dndnode\"\r\n        onDragStart={(event) => onDragStart(event, \"default\")}\r\n        draggable\r\n      >\r\n        Dummies \r\n      </div>\r\n      \r\n      <div\r\n        onMouseEnter={() => setSelectedElement(\"Standard Scaler\")}\r\n        className=\"dndnode\"\r\n        onDragStart={(event) => onDragStart(event, \"default\")}\r\n        draggable\r\n      >\r\n        Standard Scaler \r\n      </div>\r\n      \r\n      <div\r\n        onMouseEnter={() => setSelectedElement(\"Pandas qcut\")}\r\n        className=\"dndnode\"\r\n        onDragStart={(event) => onDragStart(event, \"default\")}\r\n        draggable\r\n      >\r\n       Pandas qcut\r\n      </div>\r\n      \r\n      <div\r\n        onMouseEnter={() => setSelectedElement(\"Target Encoding\")}\r\n        className=\"dndnode\"\r\n        onDragStart={(event) => onDragStart(event, \"default\")}\r\n        draggable\r\n      >\r\n       Target\r\n      </div>\r\n      \r\n      <div\r\n        onMouseEnter={() => setSelectedElement(\"xgBoost\")}\r\n        className=\"dndnode \"\r\n        onDragStart={(event) => onDragStart(event, \"default\")}\r\n        draggable\r\n      >\r\n       xgBoost\r\n      </div>\r\n\r\n      <div\r\n        onMouseEnter={() => setSelectedElement(\"Scores\")}\r\n        className=\"dndnode output\"\r\n        onDragStart={(event) => onDragStart(event, \"output\")}\r\n        draggable\r\n      >\r\n       Scores\r\n      </div>\r\n\r\n      \r\n      \r\n    </aside>\r\n  );\r\n};\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  className: \"cls-1\",\n  d: \"M12.75116,7.3384,14,6.824l-.9144-2.2176-1.24884.51438A4.7393,4.7393,0,0,0,10.892,4.172l.51838-1.24642L9.19757,2.004,8.67839,3.2512a4.71535,4.71535,0,0,0-.67681-.04879,4.8031,4.8031,0,0,0-.66239.04643L6.82317,2l-2.21676.9144.51517,1.24884A4.74113,4.74113,0,0,0,4.172,5.108l-1.2472-.51844L2.00316,6.80243l1.24725.51918a4.81569,4.81569,0,0,0-.00242,1.34L2,9.176l.91356,2.2176,1.24883-.51438a4.823,4.823,0,0,0,.94477.94882l-.51839,1.2472,2.2144.92083.51844-1.24647a4.67338,4.67338,0,0,0,.67439.048,4.73749,4.73749,0,0,0,.66555-.04637L9.176,14l2.2176-.91361-.51438-1.24878a4.82623,4.82623,0,0,0,.94955-.94483l1.24563.51845.92161-2.2144-1.2472-.51844A4.729,4.729,0,0,0,12.75116,7.3384ZM11.69174,9.75607c0,.24367-.35128.50052-.95462.70306-.06913.02322-.14243.04485-.21787.06649-.0791.02264-.16136.04428-.2479.06484a9.89613,9.89613,0,0,1-2.27321.2421,9.88007,9.88007,0,0,1-2.27113-.2421c-.087-.02056-.16879-.0422-.24789-.06484-.07595-.02164-.1493-.04327-.21787-.067-.60335-.202-.95356-.45889-.95356-.70256V9.07936c.00789.008.02057.01426.03.02215a1.56682,1.56682,0,0,0,.22311.1609l.02006.01262A2.72481,2.72481,0,0,0,4.89,9.42434l.00631.00315c.02214.00947.04535.01842.06749.02744.03538.01318.07437.02529.11026.03741.06226.0227.125.04535.18987.06592.0227.00743.04327.01583.06749.02321.01161.00372.02586.00687.03905.01059.12344.03583.2537.06857.38925.09758.02952.00682.057.01318.08755.01949.144.0306.29432.05747.44779.08068.02953.00474.06012.00845.0897.01268.14186.02056.28587.038.434.05324l.07015.008c.16248.01476.32756.02687.49156.03532.03747.00158.07437.00265.11133.00473.16874.00738.33861.01217.50633.01217.16823,0,.337-.00479.50684-.01217L8.61523,9.899c.16508-.00845.33016-.02056.49315-.03532l.06857-.008c.14823-.01476.29325-.03268.43618-.05324.02952-.00423.06012-.00794.0902-.01268q.2302-.03481.44622-.08068c.03059-.00631.059-.01267.08862-.01949.13448-.029.26367-.06175.38762-.09657.01375-.00473.029-.00788.0422-.01211.02321-.00687.04327-.01527.06648-.0227.06592-.02057.1271-.04322.19037-.06592.03482-.01212.07386-.02423.10818-.03691.02315-.009.04636-.01791.06856-.02794l.00789-.00315A2.744,2.744,0,0,0,11.417,9.275c.00845-.00422.01476-.00946.02164-.01369a1.651,1.651,0,0,0,.222-.15927c.009-.00794.02164-.01476.0311-.02271Zm0-1.76058c0,.24367-.35128.50053-.95462.70307-.06913.02321-.14243.04485-.21787.06648-.0791.02265-.16136.04429-.2479.06485A9.89675,9.89675,0,0,1,7.99814,9.072,9.88068,9.88068,0,0,1,5.727,8.82989c-.087-.02056-.16879-.0422-.24789-.06485-.07595-.02163-.1493-.04327-.21787-.067-.60335-.202-.95356-.45889-.95356-.70256v-.6767c.00789.00789.02057.01426.03.02214a1.56588,1.56588,0,0,0,.22311.16085l.02006.01268A2.71639,2.71639,0,0,0,4.89,7.66371l.00631.00321c.02214.00946.04535.01842.06749.02738.03538.01318.07437.02479.11026.03746.06226.02271.125.04536.18987.06592.0227.00738.04327.01634.06749.02321l.03905.0111c.12344.03533.2537.0675.38925.097.02952.00637.057.01319.08755.01955.144.03059.29432.05747.44779.08119l.0897.01217c.14186.02056.28587.038.434.05324l.07015.00794c.16248.01527.32756.02688.49156.03533.03747.00158.07437.00315.11133.00529.16874.00682.33861.01155.50633.01155.16823,0,.337-.00473.50684-.01155.037-.00214.07335-.00371.11025-.00529.16508-.00845.33016-.02006.49315-.03533L9.177,8.09516c.14823-.01476.29325-.03268.43618-.05324.02952-.00423.06012-.00795.0902-.01217q.2302-.03558.44622-.08119c.03059-.00636.059-.01318.08862-.01955q.20172-.04428.38762-.09651c.01375-.00473.029-.00789.0422-.01211.02321-.00637.04327-.01533.06648-.02271.06592-.02056.1271-.04321.19037-.06592.03482-.01267.07386-.02428.10818-.0369.02315-.009.04636-.018.06856-.02794l.00789-.00321a2.73533,2.73533,0,0,0,.3075-.14925c.00845-.00422.01476-.00946.02164-.01369a1.65655,1.65655,0,0,0,.222-.15933c.009-.00789.02164-.0142.0311-.02265Zm-.95412-1.05012c-.07014.02372-.14242.04586-.21888.067-.0791.02265-.16141.04428-.24789.06484a9.89648,9.89648,0,0,1-2.2722.24159A9.88494,9.88494,0,0,1,5.728,7.0772c-.08648-.02056-.16874-.04219-.24734-.06434-.077-.02163-.1493-.04377-.21888-.06749-.60233-.20147-.95361-.45889-.95361-.70256,0-.509,1.51532-1.07542,3.69045-1.07542,2.17676,0,3.69366.56644,3.69366,1.07542C11.69231,6.48648,11.341,6.7439,10.73762,6.94537Z\"\n});\n\nvar SvgCog = function SvgCog(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    fill: \"#000000\",\n    height: \"800px\",\n    width: \"800px\",\n    id: \"Layer_1\",\n    \"data-name\": \"Layer 1\",\n    viewBox: \"0 0 16 16\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgCog, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/cog.1b7d5ce5.svg\";\nexport { ForwardRef as ReactComponent };","import React, {useRef, useEffect, useState,useCallback  } from \"react\"\r\nimport { ComponentProps, Streamlit, withStreamlitConnection } from \"streamlit-component-lib\"\r\nimport ReactFlow, {\r\n    ReactFlowProvider,\r\n    Controls,\r\n    Background,\r\n    addEdge,\r\n    removeElements,\r\n  } from \"react-flow-renderer\";\r\n  \r\nimport Sidebar from \"./Sidebar.js\";\r\n\r\nimport {ReactComponent as ReactLogo} from \"./cog.svg\";\r\n\r\n/** \r\n * We can use a Typescript interface to destructure the arguments from Python\r\n * and validate the types of the input\r\n */\r\n\r\n\r\nconst initialElements = [\r\n\r\n  ];\r\n\r\n  const generateNodesFromValueChain = (elms) => {\r\n    const elements = [];\r\n    for (const i of Object.keys(elms)) {\r\n      console.log(elms[i])\r\n      elements.push(elms[i]);\r\n    }\r\n    return elements;\r\n  };\r\n  \r\nconst generateEdgesFromValueChain = (valuChain) => {\r\n    const elements = [];\r\n    for (const valuChainItem in valuChain) {\r\n      if (Object.hasOwnProperty.call(valuChain, valuChainItem)) {\r\n        const element = valuChain[valuChainItem];\r\n        if (element.childOf) {\r\n          elements.push({\r\n            id: `edge-${valuChainItem}-${element.childOf}`,\r\n            source: valuChainItem,\r\n            target: element.childOf,\r\n            type: \"smoothstep\"\r\n          });\r\n        }\r\n      }\r\n    }\r\n    return elements;\r\n  };\r\n  \r\n  let id = 0;\r\n  const getId = () => `dndnode_${id++}`;\r\n\r\n/**\r\n * No more props manipulation in the code.\r\n * We store props in state and pass value directly to underlying Slider\r\n * and then back to Streamlit.\r\n */\r\n\r\n\r\n\r\nconst Labs = function Labs(props) {\r\n  const [paneMoveable] = useState(false);\r\n  const [panOnScroll] = useState(true);\r\n  const reactFlowWrapper = useRef(null);\r\n  const [reactFlowInstance, setReactFlowInstance] = useState(null);\r\n  const [elements, setElements] = useState(initialElements);\r\n\r\n  const clinetData = JSON.parse(props.args.json);\r\n  // if sizof clinetData.valueChain > 0\r\n  \r\n  let onLoad = (_reactFlowInstance) => {\r\n    setReactFlowInstance(_reactFlowInstance);\r\n  };\r\n\r\n  if(clinetData.length > 0){\r\n    onLoad = (_reactFlowInstance) => {\r\n      setReactFlowInstance(_reactFlowInstance);\r\n\r\n      // Set Nodes\r\n      setElements((es) =>\r\n        es.concat(generateNodesFromValueChain(clinetData))\r\n      );\r\n      // Set Edges\r\n      setElements((es) =>\r\n        es.concat(generateEdgesFromValueChain(clinetData))\r\n      );\r\n    };\r\n  }else{\r\n  }\r\n \r\n  \r\n\r\n  function save(){\r\n    \r\n    if( elements.length > 0){\r\n      \r\n      const elms = reactFlowInstance.getElements();\r\n      console.log(elms);\r\n      Streamlit.setComponentValue(JSON.stringify(elms, null, 2))\r\n    }\r\n  }\r\n  const onConnect = (params) => setElements((els) => addEdge(params, els));\r\n  const onElementsRemove = (elementsToRemove) =>\r\n    setElements((els) => removeElements(elementsToRemove, els));\r\n\r\n    \r\n  \r\n    const onNodeDoubleClick = (event, node) => {\r\n      setElements((els) => els.filter((element) => element.id !== node.id));\r\n    };\r\n    \r\n\r\n  const onDragOver = (event) => {\r\n    event.preventDefault();\r\n    event.dataTransfer.dropEffect = \"move\";\r\n  };\r\n\r\n  const onDrop = (event) => {\r\n    event.preventDefault();\r\n    console.log(event.dataTransfer);\r\n    const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\r\n    const type = event.dataTransfer.getData(\"application/reactflow\");\r\n    const elm  = event.dataTransfer.getData(\"elm\");\r\n    const position = reactFlowInstance.project({\r\n      x: event.clientX - reactFlowBounds.left,\r\n      y: event.clientY - reactFlowBounds.top\r\n    });\r\n\r\n    \r\n    \r\n\r\n    const newNode = {\r\n      id: getId(),\r\n      elm,\r\n      type,\r\n      position,\r\n      sourcePosition: \"right\",\r\n      targetPosition: \"left\",\r\n      data: { label: elm }\r\n    };\r\n\r\n    setElements((es) => es.concat(newNode));\r\n    \r\n    \r\n  };\r\n\r\n  \r\n  \r\n  \r\n    \r\n    // Destructure using Typescript interface\r\n    // This ensures typing validation for received props from Python\r\n    const { label, initialValue } = props.args\r\n    const [value, setValue] = useState(initialValue)\r\n    useEffect(() => Streamlit.setFrameHeight())\r\n\r\n  const [elementsjson, setElementsjson] = useState([]);\r\n  \r\n \r\n\r\n  return (\r\n    <>\r\n\r\n    <div className=\"dndflow\">\r\n      <ReactFlowProvider>\r\n        <div className=\"reactflow-wrapper\" ref={reactFlowWrapper}>\r\n          <ReactFlow\r\n            elements={elements}\r\n            onConnect={onConnect}\r\n            onLoad={onLoad}\r\n            onDrop={onDrop}\r\n            onDragOver={onDragOver}\r\n            paneMoveable={paneMoveable}\r\n            panOnScroll={panOnScroll}\r\n            snapToGrid={true}\r\n            onNodeDoubleClick={onNodeDoubleClick}\r\n          >\r\n            \r\n            <Controls />\r\n            <Background variant=\"lines\" />\r\n            \r\n          </ReactFlow>\r\n        </div>\r\n        <Sidebar onSave={save}> \r\n        </Sidebar>\r\n        \r\n      </ReactFlowProvider>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default withStreamlitConnection(Labs)\r\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport Labs from \"./Labs.js\"\n\n\n// Wrap your CustomSlider with the baseui them\nReactDOM.render(\n  <React.StrictMode>\n    <div className=\"dndflow-wrapper\">\n        <Labs />\n    </div>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}